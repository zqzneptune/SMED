// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// GetDICE
NumericMatrix GetDICE(NumericMatrix mat);
RcppExport SEXP _SMED_GetDICE(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDICE(mat));
    return rcpp_result_gen;
END_RCPP
}
// GetMinTN
NumericMatrix GetMinTN(NumericMatrix mat);
RcppExport SEXP _SMED_GetMinTN(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(GetMinTN(mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SMED_GetDICE", (DL_FUNC) &_SMED_GetDICE, 1},
    {"_SMED_GetMinTN", (DL_FUNC) &_SMED_GetMinTN, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SMED(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
